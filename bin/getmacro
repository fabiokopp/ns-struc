#!/usr/bin/python
__doc__ = 'GETMACRO -- look up macroscopic EoS observables like Mmax, R_1.4, ... from NS properties data'
__usage__ = 'getmacro macro-EoS1.csv,macro-EoS2.csv,...'
__author__ = 'philippe.landry@ligo.org'
__date__ = '03-2019'

import numpy as np
from optparse import OptionParser
from scipy.interpolate import interp1d
from macro import macro

parser = OptionParser(usage=__usage__, description=__doc__)
parser.add_option('-p', '--prop', default='M=1.4', help='macroscopic observable (M=1.4, R=max, Lambda=min, ...) at which to look up other NS properties, DEFAULT=M=1.4', metavar='M=1.4')
parser.add_option('-d', '--dir', default='./dat/', help='path to directory housing NS properties data, DEFAULT=./dat/', metavar='./dat/')
parser.add_option('-o', '--outdir', default='./dat/', help='path to output directory, DEFAULT=./dat/', metavar='outdir')
parser.add_option('-t', '--tag', default='', help='tag to append to output filename, DEFAULT=None', metavar='""')
parser.add_option('-f', '--filename', default='canon', help='output filename (automatically appends .csv), DEFAULT=canon', metavar='canon')

opts, args = parser.parse_args()
eosnames = str(args[0]).split(',')
prop = str(opts.prop)
var = prop.split('=')[0]
indir = str(opts.dir)
outdir = str(opts.outdir)
tag = str(opts.tag)
filename = str(opts.filename)

# INTERPOLATE MASS RELATIONS FOR EACH EOS

properties = np.genfromtxt(indir+eosnames[0],names=True,delimiter=',')
props = list(properties.dtype.names)
props.remove(var)

outfile = open(outdir+filename+tag+".csv","w")
header = 'EoS,'+var+','+','.join(props)+' \n'
outfile.write(header)

for eosname in eosnames:

	shortname = (eosname.split('-')[-1]).split('.')[0]

	propspath = indir+eosname
	macros = macro(propspath,prop)

# RETURN PROPERTIES AT TARGET VALUE

	macros = [str(obs) for obs in macros]
	macros.insert(0,shortname)
	outfile.write(','.join(macros)+'\n')

